{"ast":null,"code":"import _toConsumableArray from \"/home/seeju/Documents/PUC - DEV/React/ex05/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/seeju/Documents/PUC - DEV/React/ex05/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { actions as moviesActions } from '../actions/MoviesActions';\nvar initialState = {\n  movies: {},\n  playlist: []\n};\n\nvar MoviesReducer = function MoviesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var movies, playlist;\n\n  switch (action.type) {\n    case moviesActions.moviesList:\n      movies = _objectSpread({}, state.movies);\n      movies[action.id] = action.movies;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        movies\n      });\n\n    case moviesActions.insertMovie:\n      playlist = _toConsumableArray(new Set([].concat(_toConsumableArray(state.playlist), [action.movie])));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playlist\n      });\n\n    case moviesActions.removeMovie:\n      playlist = state.playlist.filter(function (_, i) {\n        return i !== action.id;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playlist\n      });\n\n    default:\n      return state;\n  }\n};\n\n_c = MoviesReducer;\nexport default MoviesReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesReducer\");","map":{"version":3,"sources":["/home/seeju/Documents/PUC - DEV/React/ex05/src/reducers/MoviesReducer.js"],"names":["actions","moviesActions","initialState","movies","playlist","MoviesReducer","state","action","type","moviesList","id","insertMovie","Set","movie","removeMovie","filter","_","i"],"mappings":";;AAAA,SAASA,OAAO,IAAIC,aAApB,QAAyC,0BAAzC;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AACpD,MAAIJ,MAAJ,EAAYC,QAAZ;;AACA,UAAQG,MAAM,CAACC,IAAf;AACI,SAAKP,aAAa,CAACQ,UAAnB;AACIN,MAAAA,MAAM,qBAAQG,KAAK,CAACH,MAAd,CAAN;AACAA,MAAAA,MAAM,CAACI,MAAM,CAACG,EAAR,CAAN,GAAoBH,MAAM,CAACJ,MAA3B;AACA,6CACOG,KADP;AAEIH,QAAAA;AAFJ;;AAIJ,SAAMF,aAAa,CAACU,WAApB;AACIP,MAAAA,QAAQ,sBAAO,IAAIQ,GAAJ,8BAAYN,KAAK,CAACF,QAAlB,IAA4BG,MAAM,CAACM,KAAnC,GAAP,CAAR;AACA,6CACKP,KADL;AAEEF,QAAAA;AAFF;;AAKJ,SAAKH,aAAa,CAACa,WAAnB;AACIV,MAAAA,QAAQ,GAAGE,KAAK,CAACF,QAAN,CAAeW,MAAf,CAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAC,KAAKV,MAAM,CAACG,EAAvB;AAAA,OAAtB,CAAX;AACA,6CACKJ,KADL;AAEEF,QAAAA;AAFF;;AAKF;AAAS,aAAOE,KAAP;AAtBf;AAwBH,CA1BD;;KAAMD,a;AA4BN,eAAeA,aAAf","sourcesContent":["import { actions as moviesActions } from '../actions/MoviesActions';\n\nconst initialState = {\n    movies: {},\n    playlist: [],\n  };\n  \nconst MoviesReducer = (state = initialState, action) => {\n    let movies, playlist;\n    switch (action.type) {\n        case moviesActions.moviesList:\n            movies = { ...state.movies };\n            movies[action.id] = action.movies;\n            return {\n                ...state,\n                movies,\n            };\n        case  moviesActions.insertMovie:\n            playlist = [...new Set([...state.playlist, action.movie])];\n            return {\n              ...state,\n              playlist,\n            };\n      \n        case moviesActions.removeMovie:\n            playlist = state.playlist.filter((_, i) => i !== action.id);\n            return {\n              ...state,\n              playlist,\n            };\n      \n          default: return state;\n    }\n};\n\nexport default MoviesReducer;"]},"metadata":{},"sourceType":"module"}